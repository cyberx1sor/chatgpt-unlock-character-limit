javascript:(function() {  const button = document.createElement("button");  button.textContent = "Upload File";  button.style.backgroundColor = "teal";  button.style.color = "white";  button.style.padding = "2px";  button.style.border = "none";  button.style.borderRadius = "0px";  button.style.margin = "2px";  button.style.fontFamily = "futura";  const targetElement = document.querySelector(".flex.flex-col.w-full.py-2.flex-grow.md\\:py-3.md\\:pl-4");  targetElement.parentNode.insertBefore(button, targetElement);  async function handleFileSelection() {    const input = document.createElement("input");    input.type = "file";    input.accept = ".txt,.js,.py,.html,.css,.json,.csv";    input.addEventListener("change", async (event) => {      const file = event.target.files[0];      if (file) {        const reader = new FileReader();        reader.onload = async (event) => {          const fileContent = event.target.result;          const text = fileContent.toString();          const numChunks = Math.ceil(text.length / 15000);          for (let i = 0; i < numChunks; i++) {            const chunk = text.substr(i * 15000, 15000);            await submitConversation(chunk, i + 1, file.name);          }        };        reader.readAsText(file);      }    });    button.addEventListener("click", () => {      input.click();    });  }  async function submitConversation(text, part, filename) {    const textarea = document.querySelector("textarea[tabindex='0']");    const enterKeyEvent = new KeyboardEvent("keydown", {      bubbles: true,      cancelable: true,      keyCode: 13,    });    textarea.value = `Part ${part} of ${filename}:\n\n${text}`;    textarea.dispatchEvent(enterKeyEvent);    let chatgptReady = false;    while (!chatgptReady) {      await new Promise((resolve) => setTimeout(resolve, 1000));      chatgptReady = !document.querySelector(".text-2xl > span:not(.invisible)");    }  }  handleFileSelection();})();
